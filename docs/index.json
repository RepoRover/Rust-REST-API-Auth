{
    "openapi": "3.0.0",
    "info": {
        "version": "0.1.0",
        "title": "Rust Authentication API",
        "description": "User authentication"
    },
    "servers": [
        {
            "url": "https://hello.com"
        }
    ],
    "paths": {
        "/signup": {
            "post": {
                "summary": "Create new user.",
                "requestBody": {
                    "description": "In order for user to sign up he/she must provide valid email, password and confirmed password.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignUpSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created, access token granted",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Sets access token cookie for user authentication",
                                "schema": {
                                    "type": "string",
                                    "example": "access_token=123abc; Path=/; HttpOnly; Secure; SameSite=None; Domain=example.com"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "409": {
                        "description": "User with entered email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "msg": "User with this email already exists. Use different email or log in with existing account"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/login": {
            "put": {
                "summary": "Log user in",
                "requestBody": {
                    "description": "In order for user to log in to his/her existing account he/she must provide account email and password.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogInSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in, access token granted.",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Sets access token cookie for user authentication.",
                                "schema": {
                                    "type": "string",
                                    "example": "access_token=123abc; Path=/; HttpOnly; Secure; SameSite=None; Domain=example.com"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "404": {
                        "description": "Set if any of provided user credentials is incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "msg": "Invalid email or password"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/logout": {
            "put": {
                "summary": "Log user out",
                "description": "Route ensures that `access_token` stored in client cookie is cleared.",
                "security": [
                    {
                        "AccessTokenAuthCookie": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfuly logged out."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "InvalidRequest": {
                "description": "This type of response is sent when client provides an invalid request i.e. request body/headers miss some required properties for that particular route.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "msg": "Request contains missing values"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Unexpected internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "msg": "Service is currenly unavailable"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "AccessTokenAuthCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "access_token",
                "description": "Access token cookie. Configured so that it is not accesible from client side scripts (HttpOnly), only sent through secure channels (Secure), issued to third party web-site (SameSite=None), sent to a particular third-party web-site domain and makes it visible to all the subdomains i.e. `app.example.com` (Domain=example.com) and make this cookie to be sent with all the requests to the site that issued cookie in first place (Path=/)."
            }
        },
        "schemas": {
            "SignUpSchema": {
                "description": "Request body provided when user requests to sign up for application.",
                "type": "object",
                "required": [
                    "email",
                    "pwd",
                    "pwdc"
                ],
                "properties": {
                    "email": {
                        "description": "User's account email address.",
                        "type": "string",
                        "format": "email"
                    },
                    "pwd": {
                        "description": "User's account password.",
                        "type": "string",
                        "format": "password"
                    },
                    "pwdc": {
                        "description": "A confirmation of the user's password.",
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "LogInSchema": {
                "description": "Request body provided when user requests to log in to application with existing account.",
                "type": "object",
                "required": [
                    "email",
                    "pwd"
                ],
                "properties": {
                    "email": {
                        "description": "User's account email address.",
                        "type": "string",
                        "format": "email"
                    },
                    "pwd": {
                        "description": "User's account password.",
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "Error": {
                "description": "Response object in case of an occured error.",
                "type": "object",
                "required": [
                    "msg"
                ],
                "properties": {
                    "msg": {
                        "description": "Error message, must contain user friendly content.",
                        "type": "string"
                    }
                },
                "example": {
                    "msg": "Service is currenly unavailable"
                }
            }
        }
    },
    "security": []
}